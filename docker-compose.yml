version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: prod.Dockerfile
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  golang:
    container_name: golang
    build:
      context: .
      dockerfile: golang.Dockerfile
    command: go run main.go
    volumes:
      - ./backend:/go/src/app
    working_dir: /go/src/app
    #ports:
    #  - "3000:3000"
    environment:
      PORT: 3000

#  mysql:
#    image: mysql:latest
#    command: --default-authentication-plugin=mysql_native_password
#    env_file:
#      - .env
#    volumes:
#      - goinvest-volume:/var/lib/mysql
#    ports:
#      - 3306:3306
#
#  adminer:
#    image: adminer:latest
#    env_file:
#      - .env
#    environment:
#      ADMINER_DEFAULT_SERVER: mysql
#    depends_on:
#      - mysql
#    ports:
#      - 8080:8080