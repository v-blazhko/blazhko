version: '3'
services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: prod.Dockerfile
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  golang:
    container_name: golang
    build:
      context: .
      dockerfile: golang.Dockerfile
    command: go run main.go
    env_file:
      - .env
      - .env.local
    volumes:
      - ./backend:/go/src/app
    working_dir: /go/src/app
    environment:
      PORT: 3000

  mysql:
    container_name: mysql
    build:
      context: .
      dockerfile: mysql.Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    env_file:
      - .env
      - .env.local
    volumes:
      - govolume:/var/lib/mysql
      - ./migrations:/docker-entrypoint-migrations.d/
    ports:
      - 3306:3306

volumes:
  govolume: